import cv2
import face_recognition
import pandas as pd
import numpy as np
from datetime import datetime
import os
import tkinter as tk
from tkinter import messagebox

# Directory containing known face images
known_faces_dir = r"C:\\Users\\tejas\\Pictures\\Camera Roll"

def load_known_faces(directory):
    known_faces = []
    known_names = []
    for filename in os.listdir(directory):
        if filename.endswith(('.jpg', '.png')):
            image = face_recognition.load_image_file(os.path.join(directory, filename))
            encodings = face_recognition.face_encodings(image)
            if encodings:
                known_faces.append(encodings[0])
                known_names.append(filename.split('.')[0])
    return np.array(known_faces), known_names

def capture_image():
    cam = cv2.VideoCapture(0)
    if not cam.isOpened():
        messagebox.showerror("Error", "Camera could not be opened.")
        return None
    ret, frame = cam.read()
    cam.release()
    cv2.destroyAllWindows()
    return frame if ret else None

def recognize_face(captured_image, known_faces, known_names):
    face_encodings = face_recognition.face_encodings(captured_image)
    if not face_encodings:
        messagebox.showinfo("Info", "No faces detected in the image.")
        return None
    captured_encoding = face_encodings[0]
    matches = face_recognition.compare_faces(known_faces, captured_encoding)
    if True in matches:
        first_match_index = matches.index(True)
        return known_names[first_match_index]
    return None

def mark_attendance(student_name, file='attendance.xlsx'):
    now = datetime.now()
    current_date = now.strftime("%Y-%m-%d")
    current_time = now.strftime("%H:%M:%S")
    try:
        df = pd.read_excel(file)
    except FileNotFoundError:
        df = pd.DataFrame(columns=["Name", "Date", "Time"])
    new_record_df = pd.DataFrame({"Name": [student_name], "Date": [current_date], "Time": [current_time]})
    df = pd.concat([df, new_record_df], ignore_index=True)
    df.to_excel(file, index=False)

def run_attendance_system():
    known_faces, known_names = load_known_faces(known_faces_dir)
    if known_faces.size == 0:
        messagebox.showerror("Error", "No known faces found.")
        return
    
    image = capture_image()
    if image is None:
        return

    student_name = recognize_face(image, known_faces, known_names)
    if student_name is None:
        messagebox.showinfo("Info", "Student not recognized!")
        return
    mark_attendance(student_name)
    messagebox.showinfo("Success", f"Attendance marked for {student_name}")

# Set up the GUI
root = tk.Tk()
root.title("Face Recognition Attendance System")
root.geometry("300x150")

start_button = tk.Button(root, text="Start Attendance", command=run_attendance_system)
start_button.pack(pady=50)

root.mainloop()
